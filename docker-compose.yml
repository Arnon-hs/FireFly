version: '3.8'

services:
  bot_main:
    build:
      context: ./bot_main
      dockerfile: Dockerfile
    command: python bot.py
    environment:
      - BOT_MAIN_TOKEN
      - SENTRY_DSN
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    networks:
      - app_net

  bot_counter:
    build:
      context: ./bot_counter
      dockerfile: Dockerfile
    command: python main.py
    environment:
      - BOT_COUNTER_TOKEN
      - SENTRY_DSN
    ports:
      - "8001:8000"
    depends_on:
      - redis
      - postgres
    networks:
      - app_net

  admin_panel:
    build:
      context: ./admin_panel
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DJANGO_SECRET_KEY
      - DJANGO_DEBUG
      - DJANGO_ALLOWED_HOSTS
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PORT
      - SENTRY_DSN
    ports:
      - "8002:8000"
    depends_on:
      - redis
      - postgres
    networks:
      - app_net

  redis:
    image: redis
    volumes: 
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - app_net

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_net

networks:
  app_net:

volumes:
  redis-data:
  postgres-data: